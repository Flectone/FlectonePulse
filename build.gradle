plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.0'
    id 'com.github.gmazzo.buildconfig' version '5.6.2'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.gmazzo.buildconfig'
    apply plugin: 'com.gradleup.shadow'

    group = "net.flectone.pulse.${project.name}"

    java {
        sourceCompatibility = java_version
        targetCompatibility = java_version
    }

    shadowJar {
        relocate("com.alessiodp.libby", "net.flectone.pulse.library.libby")
        relocate("com.google.inject", "net.flectone.pulse.library.guice")
        relocate("com.google.common", "net.flectone.pulse.library.guava")
        relocate("net.elytrium.serializer", "net.flectone.pulse.library.elytrium")

//        relocate("com.github.retrooper.packetevents", "net.flectone.pulse.library.packetevents")
//        relocate("io.github.retrooper.packetevents", "net.flectone.pulse.library.packetevents.impl")

        relocate("net.kyori.adventure", "net.flectone.pulse.library.adventure")

        outputs.cacheIf { true }

        archiveBaseName.set("${project_name}-${project.name}")
        archiveClassifier.set("")
        archiveVersion.set("${project_version}")

        dependencies {
            exclude('net.fabricmc:.*')
            exclude '/mappings/*'
        }

        minimize()
    }

    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()

        maven { url = "https://jitpack.io" }
        maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
        maven { url = "https://oss.sonatype.org/content/groups/public/" }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven { url = "https://repo.codemc.io/repository/maven-releases/" }
        maven { url = "https://repo.minebench.de" }
        maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots" }
        maven { url = "https://libraries.minecraft.net" }
        maven { url = "https://maven.evokegames.gg/snapshots" }
        maven { url = "https://maven.maxhenkel.de/repository/public" }
        maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
        maven { url = "https://repo.plasmoverse.com/releases" }
        maven { url = "https://repo.plasmoverse.com/snapshots" }
        maven { url = "https://repo.loohpjames.com/repository" }
        maven { url = "https://repo.diogotc.com/releases" }
        maven { url = "https://repo.codemc.io/repository/maven-snapshots/" }
        maven { url = "https://maven.devs.beer/" }
    }

    dependencies {
        compileOnly "org.jetbrains:annotations:$jetbrains_annotations_version"

        compileOnly "org.projectlombok:lombok:$lombok_version"
        annotationProcessor "org.projectlombok:lombok:$lombok_version"

        compileOnly "com.google.inject:guice:$guice_version"
        compileOnly "net.kyori:adventure-api:$adventure_api"
        compileOnly "org.apache.logging.log4j:log4j-core:$log4j_core_version"
    }
}

tasks.named("shadowJar").configure { enabled = false }
tasks.named("jar").configure { enabled = false }

tasks.register("mergeJars", Jar) {
    archiveVersion.set("${project_version}")

    def platforms = subprojects.findAll {
        it.name != "core"
    }

    from {
        platforms.collect {
            zipTree("${it.buildDir}/libs/${project_name}-${it.name}-${project_version}.jar")
        }
    }

    from(rootProject.file('LICENSE')) {
        into('/')
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    dependsOn platforms.collect { it.tasks.named("shadowJar") }
}