import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"

	implementation("com.alessiodp.libby:libby-fabric:$libby_version")
	implementation(project(":core"))

	Set<String> apiModules = [
			'fabric-api-base',
			'fabric-command-api-v2',
			'fabric-lifecycle-events-v1',
			'fabric-networking-api-v1',
			'fabric-entity-events-v1'
	]

	apiModules.forEach {
		modImplementation(fabricApi.module(it, '0.119.0+1.21.5'))
	}

	include(modImplementation('me.lucko:fabric-permissions-api:0.3.3'))

	modCompileOnlyApi("com.github.retrooper:packetevents-fabric:$packetevents_spigot_version")
	modCompileOnly("org.incendo:cloud-fabric:${cloud_paper_version}")

//	implementation("org.slf4j:slf4j-api:2.1.0-alpha1")

	compileOnly("net.kyori:adventure-api:$adventure_api")
	compileOnly("net.kyori:adventure-text-minimessage:$adventure_api")
	compileOnly("net.elytrium:serializer:$elytrium_serializer_version")
}

shadowJar {
	archiveFileName = "flectonepulsedev-" + project.name + "-" + project_version + ".jar"

	relocate("com.alessiodp.libby", "net.flectone.pulse.library.libby")
	relocate("com.google.inject", "net.flectone.pulse.library.guice")
	relocate("com.google.common", "net.flectone.pulse.library.guava")
	relocate("net.elytrium.serializer", "net.flectone.pulse.library.elytrium")

//	relocate("com.github.retrooper.packetevents", "net.flectone.pulse.library.packetevents")
//	relocate("io.github.retrooper.packetevents", "net.flectone.pulse.library.packetevents.impl")

	relocate("net.kyori.adventure", "net.flectone.pulse.library.adventure")

	outputs.cacheIf { true }

	archiveBaseName.set("${project_name}-${project.name}")
	archiveClassifier.set("")
	archiveVersion.set("${project_version}")

	dependencies {
		exclude('net.fabricmc:.*')
		exclude '/mappings/*'

		include(dependency("com.alessiodp.libby:.*"))
		include(dependency("org.xerial:.*"))
		include(project(":core"))
	}

//	minimize()
}

processResources {
	inputs.property "version", "$project_version"
	inputs.property "description", "$project_description"

	filesMatching('**/fabric.mod.json') {
		expand "version": "1.0.0",
				"description": "11111"
	}
}

tasks.register('remappedShadowJar', RemapJarTask) {
	dependsOn tasks.shadowJar
	input = tasks.shadowJar.archiveFile
	addNestedDependencies = true
	archiveFileName = "FlectonePulse-" + project.name + "-" + project_version + ".jar"
}

tasks.assemble.dependsOn tasks.remappedShadowJar

artifacts {
	archives remappedShadowJar
	shadow shadowJar
}
